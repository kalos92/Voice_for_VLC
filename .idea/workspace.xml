<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="google_assistant_for_vlc" targetName="ContinuousSubmit" />
      <config projectName="google_assistant_for_vlc" targetName="ContinuousMemCheck" />
      <config projectName="google_assistant_for_vlc" targetName="ExperimentalUpdate" />
      <config projectName="google_assistant_for_vlc" targetName="ContinuousUpdate" />
      <config projectName="google_assistant_for_vlc" targetName="ContinuousConfigure" />
      <config projectName="google_assistant_for_vlc" targetName="NightlyMemoryCheck" />
      <config projectName="google_assistant_for_vlc" targetName="NightlyCoverage" />
      <config projectName="google_assistant_for_vlc" targetName="NightlyBuild" />
      <config projectName="google_assistant_for_vlc" targetName="Experimental" />
      <config projectName="google_assistant_for_vlc" targetName="ExperimentalBuild" />
      <config projectName="google_assistant_for_vlc" targetName="ExperimentalStart" />
      <config projectName="google_assistant_for_vlc" targetName="ContinuousStart" />
      <config projectName="google_assistant_for_vlc" targetName="Continuous" />
      <config projectName="google_assistant_for_vlc" targetName="Nightly" />
      <config projectName="google_assistant_for_vlc" targetName="ExperimentalCoverage" />
      <config projectName="google_assistant_for_vlc" targetName="NightlyUpdate" />
      <config projectName="google_assistant_for_vlc" targetName="ExperimentalConfigure" />
      <config projectName="google_assistant_for_vlc" targetName="NightlyConfigure" />
      <config projectName="google_assistant_for_vlc" targetName="ContinuousTest" />
      <config projectName="google_assistant_for_vlc" targetName="google_assistant_for_vlc" />
      <config projectName="google_assistant_for_vlc" targetName="ExperimentalTest" />
      <config projectName="google_assistant_for_vlc" targetName="ExperimentalSubmit" />
      <config projectName="google_assistant_for_vlc" targetName="ExperimentalMemCheck" />
      <config projectName="google_assistant_for_vlc" targetName="ContinuousCoverage" />
      <config projectName="google_assistant_for_vlc" targetName="NightlyTest" />
      <config projectName="google_assistant_for_vlc" targetName="ContinuousBuild" />
      <config projectName="google_assistant_for_vlc" targetName="NightlyStart" />
      <config projectName="google_assistant_for_vlc" targetName="NightlyMemCheck" />
      <config projectName="google_assistant_for_vlc" targetName="NightlySubmit" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug">
        <ADDITIONAL_GENERATION_ENVIRONMENT>
          <envs>
            <env name="CXX_FLAGS" value="-pthread" />
          </envs>
        </ADDITIONAL_GENERATION_ENVIRONMENT>
      </configuration>
      <configuration PROFILE_NAME="Release" CONFIG_NAME="Release" BUILD_OPTIONS="-pthread" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f427e07a-b3e0-43fa-a554-418543459357" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/rest_server.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rest_server.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeOutput.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/CMakeOutput.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/CXX.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/CXX.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/main.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/main.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/vlc_manager.cpp.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/vlc_manager.cpp.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/google_assistant_for_vlc.dir/websocket_manager.cpp.o" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/google_assistant_for_vlc" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/google_assistant_for_vlc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/google_assistant_for_vlc.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/google_assistant_for_vlc.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/CMakeOutput.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/CMakeOutput.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Makefile.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/Makefile.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/google_assistant_for_vlc.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/google_assistant_for_vlc.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/google_assistant_for_vlc.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/google_assistant_for_vlc.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/google_assistant_for_vlc.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/google_assistant_for_vlc.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/google_assistant_for_vlc.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/CMakeFiles/google_assistant_for_vlc.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-release/google_assistant_for_vlc.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-release/google_assistant_for_vlc.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/vlc_manager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/vlc_manager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/websocket_manager.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/websocket_manager.h" beforeDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/cmake-build-debug/" />
    <ignored path="$PROJECT_DIR$/cmake-build-release/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/main.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="105">
              <caret line="19" selection-start-line="19" selection-end-line="19" />
              <folding>
                <element signature="e#0#19#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/rest_server.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="495">
              <caret line="66" column="45" selection-start-line="66" selection-start-column="45" selection-end-line="66" selection-end-column="45" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/rest_server.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="396">
              <caret line="38" column="21" selection-start-line="38" selection-start-column="21" selection-end-line="38" selection-end-column="21" />
              <folding>
                <element signature="e#135#169#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/vlc_manager.cpp">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="360">
              <caret line="54" column="52" selection-start-line="54" selection-start-column="52" selection-end-line="54" selection-end-column="52" />
              <folding>
                <element signature="e#40#64#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/synch_queue.h">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="1">
              <caret line="4" column="46" lean-forward="true" selection-start-line="4" selection-start-column="46" selection-end-line="4" selection-end-column="46" />
              <folding>
                <element signature="e#135#154#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>double</find>
      <find>videos</find>
      <find>media</find>
    </findStrings>
    <replaceStrings>
      <replace>media</replace>
      <replace>Media</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/NotRunningException.h" />
        <option value="$PROJECT_DIR$/message.cpp" />
        <option value="$PROJECT_DIR$/synch_queue.cpp" />
        <option value="$PROJECT_DIR$/message.h" />
        <option value="$PROJECT_DIR$/media.h" />
        <option value="$PROJECT_DIR$/media.cpp" />
        <option value="$PROJECT_DIR$/NotFoundException.h" />
        <option value="$PROJECT_DIR$/synch_queue.h" />
        <option value="$PROJECT_DIR$/command.h" />
        <option value="$PROJECT_DIR$/vlc_manager.h" />
        <option value="$PROJECT_DIR$/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/websocket_manager.cpp" />
        <option value="$PROJECT_DIR$/websocket_manager.h" />
        <option value="$PROJECT_DIR$/main.cpp" />
        <option value="$PROJECT_DIR$/rest_server.h" />
        <option value="$PROJECT_DIR$/vlc_manager.cpp" />
        <option value="$PROJECT_DIR$/rest_server.cpp" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="87" />
    <option name="y" value="-4" />
    <option name="width" value="1398" />
    <option name="height" value="1020" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="google_assistant_for_vlc" type="b2602c69:ProjectViewProjectNode" />
              <item name="google_assistant_for_vlc" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="project.propVCSSupport.Mappings" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="CMake Application.Voice_for_VLC">
    <configuration name="Continuous" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_PATH="$PROJECT_DIR$/cmake-build-debug/google_assistant_for_vlc" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousBuild" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ContinuousBuild" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousConfigure" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ContinuousConfigure" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousCoverage" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ContinuousCoverage" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousMemCheck" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ContinuousMemCheck" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousStart" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ContinuousStart" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousSubmit" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ContinuousSubmit" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousTest" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ContinuousTest" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContinuousUpdate" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ContinuousUpdate" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Experimental" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_PATH="$PROJECT_DIR$/cmake-build-debug/google_assistant_for_vlc" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalBuild" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ExperimentalBuild" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalConfigure" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ExperimentalConfigure" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalCoverage" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ExperimentalCoverage" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalMemCheck" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ExperimentalMemCheck" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalStart" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ExperimentalStart" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalSubmit" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ExperimentalSubmit" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalTest" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ExperimentalTest" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExperimentalUpdate" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="ExperimentalUpdate" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Nightly" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_PATH="$PROJECT_DIR$/cmake-build-debug/google_assistant_for_vlc" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyBuild" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="NightlyBuild" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyConfigure" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="NightlyConfigure" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyCoverage" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="NightlyCoverage" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyMemCheck" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="NightlyMemCheck" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyMemoryCheck" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="NightlyMemoryCheck" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyStart" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="NightlyStart" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlySubmit" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="NightlySubmit" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyTest" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="NightlyTest" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NightlyUpdate" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="NightlyUpdate" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Voice_for_VLC" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Voice_for_VLC" TARGET_NAME="Voice_for_VLC" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="Voice_for_VLC">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Voice_for_VLC" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="Voice_for_VLC" RUN_TARGET_NAME="Voice_for_VLC" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" CONFIG_NAME="Debug" RUN_PATH="$PROJECT_DIR$/cmake-build-debug/google_assistant_for_vlc" EXPLICIT_BUILD_TARGET_NAME="all">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="google_assistant_for_vlc" type="CMakeRunConfiguration" factoryName="Application" WORKING_DIR="file://$PROJECT_DIR$" PASS_PARENT_ENVS_2="true" PROJECT_NAME="google_assistant_for_vlc" TARGET_NAME="google_assistant_for_vlc" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="google_assistant_for_vlc" RUN_TARGET_NAME="google_assistant_for_vlc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.Voice_for_VLC" />
      <item itemvalue="CMake Application.Continuous" />
      <item itemvalue="CMake Application.ContinuousBuild" />
      <item itemvalue="CMake Application.ContinuousConfigure" />
      <item itemvalue="CMake Application.ContinuousCoverage" />
      <item itemvalue="CMake Application.ContinuousMemCheck" />
      <item itemvalue="CMake Application.ContinuousStart" />
      <item itemvalue="CMake Application.ContinuousSubmit" />
      <item itemvalue="CMake Application.ContinuousTest" />
      <item itemvalue="CMake Application.ContinuousUpdate" />
      <item itemvalue="CMake Application.Experimental" />
      <item itemvalue="CMake Application.ExperimentalBuild" />
      <item itemvalue="CMake Application.ExperimentalConfigure" />
      <item itemvalue="CMake Application.ExperimentalCoverage" />
      <item itemvalue="CMake Application.ExperimentalMemCheck" />
      <item itemvalue="CMake Application.ExperimentalStart" />
      <item itemvalue="CMake Application.ExperimentalSubmit" />
      <item itemvalue="CMake Application.ExperimentalTest" />
      <item itemvalue="CMake Application.ExperimentalUpdate" />
      <item itemvalue="CMake Application.Nightly" />
      <item itemvalue="CMake Application.NightlyBuild" />
      <item itemvalue="CMake Application.NightlyConfigure" />
      <item itemvalue="CMake Application.NightlyCoverage" />
      <item itemvalue="CMake Application.NightlyMemCheck" />
      <item itemvalue="CMake Application.NightlyMemoryCheck" />
      <item itemvalue="CMake Application.NightlyStart" />
      <item itemvalue="CMake Application.NightlySubmit" />
      <item itemvalue="CMake Application.NightlyTest" />
      <item itemvalue="CMake Application.NightlyUpdate" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f427e07a-b3e0-43fa-a554-418543459357" name="Default Changelist" comment="" />
      <created>1556204402833</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1556204402833</updated>
      <workItem from="1556204405157" duration="18823000" />
      <workItem from="1556277427634" duration="15511000" />
      <workItem from="1556362211230" duration="7861000" />
      <workItem from="1556451776182" duration="8311000" />
      <workItem from="1556563179080" duration="3641000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="54147000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="1344" y="-11" width="1857" height="1092" extended-state="6" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.19568823" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.32925585" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.39959225" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Database Changes" order="7" />
      <window_info anchor="bottom" id="Messages" order="8" weight="0.32925585" />
      <window_info anchor="bottom" id="Terminal" order="9" weight="0.32925585" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="11" />
      <window_info anchor="bottom" id="CMake" order="12" weight="0.3282365" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Database" order="3" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/synch_queue.cpp</url>
          <line>50</line>
          <option name="timeStamp" value="14" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/vlc_manager.cpp</url>
          <line>42</line>
          <option name="timeStamp" value="51" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/rest_server.cpp</url>
          <line>108</line>
          <option name="timeStamp" value="54" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="CMakeRunConfiguration">
        <watch expression="medias" language="ObjectiveC" />
      </configuration>
    </watches-manager>
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="watch">
      <expression>
        <expression-string>medias</expression-string>
        <language-id>ObjectiveC</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/command.cpp" />
    <entry file="file:///usr/include/pplx/pplx.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="21">
          <caret line="204" selection-start-line="204" selection-end-line="204" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/abc.cpp" />
    <entry file="file://$PROJECT_DIR$/abc.h" />
    <entry file="file://$PROJECT_DIR$/libvlcpp/vlcpp/common.hpp" />
    <entry file="file:///usr/include/c++/5/tuple">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="169">
          <caret line="192" selection-start-line="192" selection-end-line="192" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/5/bits/unique_ptr.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="298" selection-start-line="298" selection-end-line="298" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/5/bits/move.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="101" selection-start-line="101" selection-end-line="101" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/5/mutex">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="384" selection-start-line="384" selection-end-line="384" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/5/functional">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="1531" selection-start-line="1531" selection-end-line="1531" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/json/single_include/nlohmann/json.hpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="15">
          <caret line="16096" selection-start-line="16096" selection-end-line="16096" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/include/c++/5/bits/stl_iterator.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="11355">
          <caret line="757" selection-start-line="757" selection-end-line="757" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/media.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="12" selection-start-line="12" selection-end-line="12" />
          <folding>
            <element signature="e#40#58#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/media.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="990">
          <caret line="66" column="45" selection-start-line="66" selection-start-column="45" selection-end-line="66" selection-end-column="45" />
          <folding>
            <element signature="e#124#141#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/NotRunningException.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="16" column="2" lean-forward="true" selection-start-line="16" selection-start-column="2" selection-end-line="16" selection-end-column="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/NotRunningException.cpp">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/NotFoundException.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="12" column="47" selection-start-line="12" selection-start-column="47" selection-end-line="12" selection-end-column="47" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/NotFoundException.cpp">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/message.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="609">
          <caret line="47" selection-start-line="47" selection-end-line="55" selection-end-column="1" />
          <folding>
            <element signature="e#40#59#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/command.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="255">
          <caret line="17" column="7" selection-start-line="17" selection-start-column="7" selection-end-line="17" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/synch_queue.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="264">
          <caret line="59" column="9" selection-start-line="59" selection-start-column="9" selection-end-line="59" selection-end-column="9" />
          <folding>
            <element signature="e#40#64#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/message.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="690">
          <caret line="46" column="13" selection-start-line="46" selection-start-column="13" selection-end-line="46" selection-end-column="13" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/vlc_manager.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="330">
          <caret line="22" column="47" selection-start-line="22" selection-start-column="25" selection-end-line="22" selection-end-column="47" />
          <folding>
            <element signature="e#135#159#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="855">
          <caret line="57" column="46" selection-start-line="57" selection-start-column="46" selection-end-line="57" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/websocket_manager.cpp" />
    <entry file="file://$PROJECT_DIR$/websocket_manager.h" />
    <entry file="file:///usr/include/pplx/pplxtasks.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="169">
          <caret line="956" selection-start-line="956" selection-end-line="956" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/synch_queue.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1">
          <caret line="4" column="46" lean-forward="true" selection-start-line="4" selection-start-column="46" selection-end-line="4" selection-end-column="46" />
          <folding>
            <element signature="e#135#154#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/vlc_manager.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="360">
          <caret line="54" column="52" selection-start-line="54" selection-start-column="52" selection-end-line="54" selection-end-column="52" />
          <folding>
            <element signature="e#40#64#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/main.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="105">
          <caret line="19" selection-start-line="19" selection-end-line="19" />
          <folding>
            <element signature="e#0#19#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/rest_server.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="396">
          <caret line="38" column="21" selection-start-line="38" selection-start-column="21" selection-end-line="38" selection-end-column="21" />
          <folding>
            <element signature="e#135#169#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/rest_server.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="495">
          <caret line="66" column="45" selection-start-line="66" selection-start-column="45" selection-end-line="66" selection-end-column="45" />
        </state>
      </provider>
    </entry>
  </component>
</project>